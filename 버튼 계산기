import 'package:flutter/material.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  static const String _title = 'Widget Example';

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: _title,
      home: WidgetApp(),
    );
  }
}

class WidgetApp extends StatefulWidget {
  WidgetApp({Key? key}) : super(key: key);

  @override
  _WidgetExampleState createState() => _WidgetExampleState();
}

class _WidgetExampleState extends State<WidgetApp> {
  List _buttonList = ['더하기', '빼기', '곱하기', '나누기','건호'];
  List<DropdownMenuItem<String>> _dropdownMenuItems = new List.empty(growable:  true);
  String? _buttonText;
  String sum = '';
  TextEditingController value1 = TextEditingController();
  TextEditingController value2 = TextEditingController();

  @override
  void initState() {
    super.initState();
    for(var item in _buttonList) {
      _dropdownMenuItems.add(DropdownMenuItem(value: item, child: Text(item)));
    }
    _buttonText = _dropdownMenuItems[0].value;
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Widget Example'),
      ),
      body: Center(
          child: Center(
          child: Column(
          children: <Widget>[
          Padding(
          padding: EdgeInsets.all(15), //여백  사방으로생김
      child: Text(
        '결과 : $sum',
        style: TextStyle(fontSize: 20),
      ),
    ),
    Padding(
    padding: EdgeInsets.only(left: 20, right: 20),  //여백이 지정된 곳만 생김
    child: TextField(
    keyboardType: TextInputType.number, controller: value1),
    ),
    Padding(
    padding: EdgeInsets.only(left: 20, right: 20),
    child: TextField(
    keyboardType: TextInputType.number, controller: value2),
    ),
    Padding(  //더하기 버튼
    padding: EdgeInsets.all(15),
    child: RaisedButton(
    child: Row(
    children: <Widget>[
    Icon(Icons.add),
    Text(_buttonText!)],
    ),
    color: Colors.amber,
    onPressed: () {
    setState(() {
    var value1Int = double.parse(value1.value.text);  //변수 1,2 할당
    var value2Int = double.parse(value2.value.text);
    var result;
    if (_buttonText == '더하기') {
    result = value1Int + value2Int;
    } else if (_buttonText == '빼기') {
    result = value1Int - value2Int;
    } else if (_buttonText == '곱하기') {
    result = value1Int * value2Int;
    } else if (_buttonText == '나누기') {
    result = value1Int / value2Int;
    } else if (_buttonText == '건호') {
      result = value1Int % value2Int;
    }  //사칙연산
    sum = '$result';
    });
    }),
    ),
    Padding(
    padding: EdgeInsets.all(15),
    child: DropdownButton(items: _dropdownMenuItems, onChanged: (value) {
    setState(() {
    _buttonText = value as String?;
    });
    },
    value: _buttonText,
    ), //DropdownButton = 펼침, onChanged = 아이템이 바뀔때 처리한 이벤트
    )
    ],
    ),

          ),
      ), // This trailing comma makes auto-formatting nicer for build methods.
    );
  }
}
